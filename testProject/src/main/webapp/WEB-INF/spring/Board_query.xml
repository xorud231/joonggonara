<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
	
<mapper namespace="board">
<resultMap type="boardfile" id="filemap">
	    <!-- primary key 인경우 id 태그로 설정  -->
		<id  	column="fileno"    	property="fno"/>
		<!-- primary key가 아닌 다른 column -->
		<result	column="rfilename" 	property="rfilename"/>
		<result	column="sfilename" 	property="sfilename"/>
		<result	column="bno" 		property="bno"/>
	</resultMap>


	<resultMap type="board" id="boardmap">
		<id		column="bno"		property="bno"/>
		<result	column="regdate"	property="regdate"/>
		<result	column="title"		property="title"/>
		<result	column="price"		property="price"/>
		<result	column="contents"	property="contents"/>
		<result	column="dealstate"	property="dealstate"/>
		<result	column="mno"		property="mno"/>
		<result	column="dno"		property="dno"/>
		<result	column="cno"		property="cno"/>
		<!-- join data 처리 
			 1 : 1     association  태그 사용
			 1 : N     collection   태그 사용
			 속성 
			 property  객체에 매핑되는 속성명
			 ofType    join 매핑되는 실제 타입
			 resultMap join 매핑되는 resultMap id
			 
		 -->
		<collection property="files" 		ofType="boardfile"  
					resultMap="filemap"/>
	</resultMap>
	<select id="searchBuyFile"		parameterType="int"  resultMap="boardmap" >
		select 	b.bno bno, title, contents ,regdate        
		   		, bf.fno fileno, rfilename, sfilename             
		from   buyboardfile bf,                                
		      (select  bno,  title, contents              
		              , to_char(regdate,'yy-mm-dd') regdate 
		       from    buyboard                                
		       where   bno = #{bno}   ) b                           
		where b.bno = bf.bno(+)                    	
	</select>
	<select id="searchSellFile"		parameterType="int"  resultMap="boardmap" >
		select 	b.bno bno, title, contents ,regdate        
		   		, bf.fno fileno, rfilename, sfilename             
		from   sellboardfile bf,                                
		      (select  bno,  title, contents              
		              , to_char(regdate,'yy-mm-dd') regdate 
		       from    sellboard                                
		       where   bno = #{bno}   ) b                           
		where b.bno = bf.bno(+)                    	
	</select>
	<select id = "getBoardNo" resultType = "int">
		select board_no.nextval from dual
	</select>
	
	<insert id = "addBoard" parameterType = "board">
		insert into board (no, id, title, contents, regdate)
		values (#{no:INTEGER}, #{id:VARCHAR}, #{title:VARCHAR}, #{contents:VARCHAR}, sysdate)
	</insert>
	
	<update id = "updateBoard" parameterType = "board">
		update board set title = #{title:VARCHAR}, contents = #{contents:VARCHAR}, regdate = sysdate
		where no = #{no:INTEGER}
	</update>
	
	<delete id = "removeBoard" parameterType = "int">
		delete from board where no = #{no:INTEGER}
	</delete>
	
	<select id = "searchBoard" parameterType = "int" resultType = "board">
		select no, id, title, contents, to_char(regdate, 'yyyy-mm-dd') regdate
		from board
		where no = #{no:INTEGER}
	</select>
	
	<select id = "getCount" parameterType = "pagebean" resultType = "int">
		select count(*)
		from board
		<where>
			<if test = "word != null">
				<choose>
					<when test = "key == 'title'">
						title like '%'||#{word}||'%'
					</when>
					<when test = "key == 'id'">
						id = #{word}
					</when>
					<when test = "key == 'contents'">
						contents like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<select id = "searchAllBoard" parameterType = "pagebean" resultType = "board">
		select no, id, title, contents, to_char(regdate, 'yyyy-mm-dd') regdate
		from board
		<where>
			<if test = "word != null">
				<choose>
					<when test = "key == 'title'">
						title like '%'||#{word}||'%'
					</when>
					<when test = "key == 'id'">
						id = #{word}
					</when>
					<when test = "key == 'contents'">
						contents like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
		order by no desc
	</select>
	
	<select id = "getBuyCount" parameterType = "pagebean" resultType = "int">
		select count(*)
		from BUYBOARD
		<where>
			<if test = "word != null">
				<choose>
					<when test = "key == 'title'">
						title like '%'||#{word}||'%'
					</when>
					<when test = "key == 'id'">
						id = #{word}
					</when>
					<when test = "key == 'contents'">
						contents like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
	</select>
	<select id = "getSellCount" parameterType = "pagebean" resultType = "int">
		select count(*)
		from SELLBOARD
		<where>
			<if test = "word != null">
				<choose>
					<when test = "key == 'title'">
						title like '%'||#{word}||'%'
					</when>
					<when test = "key == 'id'">
						id = #{word}
					</when>
					<when test = "key == 'contents'">
						contents like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
	</select>
	<select id = "searchBuyList" parameterType = "pagebean" resultType = "board">
		select b.bno bno, b.title title, B.CONTENTS contents,b.price price, to_char(regdate, 'yyyy-mm-dd') regdate, bf.RFILENAME rfilename 
		from BUYBOARD b, BUYBOARDFILE bf
        where b.BNO = bf.BNO(+)
        order by b.bno DESC
	</select>
	
	<select id = "searchSellList" parameterType = "pagebean" resultType = "board">
		select b.bno bno, b.title title, B.CONTENTS contents,b.price price, to_char(regdate, 'yyyy-mm-dd') regdate, bf.RFILENAME rfilename 
		from SELLBOARD b, SELLBOARDFILE bf
        where b.bNO = bf.bNO(+)
        order by b.bno DESC
	</select>
	
	<select id = "searchBuyBoard" parameterType = "int" resultType = "board">
		select bno, price, dealstate, mno, dno, title, contents, to_char(regdate, 'yyyy-mm-dd') regdate
		from buyboard
		where bno = #{bno:INTEGER}
	</select>
	
	<select id = "searchSellBoard" parameterType = "int" resultType = "board">
		select bno, price, dealstate, mno, dno, title, contents, to_char(regdate, 'yyyy-mm-dd') regdate
		from sellboard
		where bno = #{bno:INTEGER}
	</select>
	
	<select id = "searchBuyReply" parameterType = "int" resultType = "reply">
		select a.*, nick
		from (select *
			  from buyreply
			  where bno = #{bno:INTEGER}) a, member m
		where a.mno = m.mno
		order by regdate
	</select>
	
	<select id = "searchSellReply" parameterType = "int" resultType = "reply">
		select a.*, nick
		from (select *
			  from sellreply
			  where bno = #{bno:INTEGER}) a, member m
		where a.mno = m.mno
		order by regdate
	</select>
	
	<select id = "getCountBuyReply" parameterType = "int" resultType = "int">
		select count(*)
		from buyreply
		where bno = #{bno:INTEGER}
	</select>
	
	<select id = "getCountSellReply" parameterType = "int" resultType = "int">
		select count(*)
		from sellreply
		where bno = #{bno:INTEGER}
	</select>
	
	<insert id = "insertBuyReply" parameterType = "hashmap">
		insert into BuyReply values (buyreply_no.nextval, #{replycontent:VARCHAR}, #{bno:INTEGER}, sysdate, #{mno:INTEGER})
	</insert>
	
	<insert id = "insertSellReply" parameterType = "hashmap">
		insert into SellReply values (sellreply_no.nextval, #{replycontent:VARCHAR}, #{bno:INTEGER}, sysdate, #{mno:INTEGER})
	</insert>
	
	<select id = "searchInCart" parameterType = "hashmap" resultType = "int">
		select count(*)
		from cart
		where mno = #{mno} and bno = #{bno} and bkind = #{sellbuy}
	</select>
	
	<delete id = "deleteCart" parameterType = "hashmap">
		delete from cart where mno = #{mno} and bno = #{bno} and bkind = #{sellbuy}
	</delete>
	
	<insert id = "insertCart" parameterType = "hashmap">
		insert into cart values (#{mno}, #{bno}, #{sellbuy})
	</insert>
	
	<delete id = "deleteBuyBoard" parameterType = "int">
		delete from buyboard where bno = #{bno}
	</delete>
	
	<delete id = "deleteSellBoard" parameterType = "int">
		delete from sellboard where bno = #{bno}
	</delete>
	
	<update id = "updateBuyReply" parameterType = "hashmap">
		update buyreply set replyContent = '#{editReply}', regdate = sysdate
		where rno = #{reply.rno}
	</update>
	
	<update id = "updateSellReply" parameterType = "hashmap">
		update sellreply set replyContent = '#{editReply}', regdate = sysdate
		where rno = #{reply.rno}
	</update>
	
	<delete id = "deleteBuyReply" parameterType = "int">
		delete from buyreply where rno = #{rno}
	</delete>
	
	<delete id = "deleteSellReply" parameterType = "int">
		delete from sellreply where rno = #{rno}
	</delete>
</mapper>
